{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","createTodo","id","uuid","completed","localStorage","setItem","className","onSubmit","htmlFor","type","placeholder","onChange","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","handleToggle","removeTodo","updateTodo","toggleTodo","result","timeout","classNames","onClick","class","TodoList","todos","JSON","parse","window","getItem","create","remove","update","toggleCompletion","newTodo","stringify","filter","t","updatedTask","updatedTodos","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf68e5c9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuid } from 'uuid';\nimport \"./NewTodoForm.css\";\n\nclass NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { task: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.createTodo({ ...this.state, id: uuid(), completed: false });\n    localStorage.setItem('Mydata',{ ...this.state, id: uuid(), completed: false })\n    this.setState({ task: \"\" });\n  }\n  render() {\n    return (\n      <form className='NewTodoForm' onSubmit={this.handleSubmit}>\n        <label htmlFor='task'> Todo</label>\n        <input\n          type='text'\n          placeholder='write'\n          id='task'\n          name='task'\n          value={this.state.task}\n          onChange={this.handleChange}\n        />\n        <button>Add </button>\n      </form>\n    );\n  }\n}\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n  toggleForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n  handleUpdate(evt) {\n    evt.preventDefault();\n    //take new task data and pass up to parent\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <CSSTransition key='editing' timeout={500} classNames='form'>\n          <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\n            <input\n              type='text'\n              value={this.state.task}\n              name='task'\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </CSSTransition>\n      );\n    } else {\n      result = (\n        <CSSTransition key='normal' timeout={500} classNames='task-text'>\n          <li className='Todo-task' onClick={this.handleToggle}>\n            {this.props.task}\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <TransitionGroup\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}\n      >\n        {result}\n        <div className='Todo-buttons'>\n          <button onClick={this.toggleForm}>\n            <i class='fas fa-pen' />\n          </button>\n          <button onClick={this.handleRemove}>\n            <i class='fas fa-trash' />\n          </button>\n        </div>\n      </TransitionGroup>\n    );\n  }\n}\nexport default Todo;\n","import React, { Component } from \"react\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.css\";\n// import axios from \"axios\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\"),\n      \n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n  }\n  create(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    },\n    () =>\n          window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos))\n          );\n  }\n\n\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(t => t.id !== id)\n    }\n    ,\n    () =>\n          window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos)));\n  }\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos },\n      () =>\n            window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos)));\n  }\n  toggleCompletion(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        \n        // let data = localStorage.getItem('mydata');\n\n        // return {data};\n\n        return { ...todo, completed: !todo.completed };\n\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos },\n      () =>\n            window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos)));\n  }\n  render() {\n\n    \n    const todos = this.state.todos.map(todo => {\n      return (\n\n        \n        <CSSTransition key={todo.id} timeout={500} classNames='todo'>\n          <Todo\n            key={todo.id}\n            id={todo.id}\n            task={todo.task}\n            completed={todo.completed}\n            removeTodo={this.remove}\n            updateTodo={this.update}\n            toggleTodo={this.toggleCompletion}\n          />\n        </CSSTransition>\n\n        \n      );\n\n    \n    });\n    return (\n      <div className='TodoList'>\n        <h1>\n          To do  <span></span>\n        </h1>\n        \n        <NewTodoForm createTodo={this.create} />\n        <ul>\n         \n            <TransitionGroup className='todo-list'>{todos}</TransitionGroup>\n          \n        </ul>\n        \n        <br></br>\n\n       \n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}